# Komponist - Generate Your Favourite Compose Stack With the Least Effort
#
# Copyright (C) 2023  Shantanoo "Shan" Desai <sdes.softdev@gmail.com>
#
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU Affero General Public License as published
#   by the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU Affero General Public License for more details.
#
#   You should have received a copy of the GNU Affero General Public License
#   along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
# generate-stack.yml: Ansible Playbook that generates Komponist Stack Files
---
- name: Komponist Stack Generation Playbook
  hosts: localhost
  vars_files:
    - vars/config.yml
    - vars/creds.yml
  tasks:

    - name: "(KOMPONIST) Generating Directory for Production-Ready Files"
      ansible.builtin.file:
        name: "{{ komponist.deploy_dir }}"
        state: directory
        mode: "0755"

    - name: "(KOMPONIST) Generating Configuration / Compose Files from Templates"
      ansible.builtin.include_tasks: "tasks/configure-{{ item }}.yml"
      with_items:
        - "{{ komponist.configuration.keys() }}"

    - name: "(KOMPONIST) Validation and Generation of docker-compose.yml"
      block:
        - name: "(DockerCompose) Validating Docker Compose Services"
          ansible.builtin.command:
            cmd: docker compose {{ compose_files }} config --no-interpolate --no-path-resolution --quiet
          args:
            chdir: "{{ komponist.deploy_dir }}"
          vars:
            compose_files: >-
              {{ komponist.configuration.keys() | map('regex_replace', '^(.*)$', ' -f docker-compose.\1.yml') | join | trim }}
          register: docker_compose_validity
          changed_when: docker_compose_validity.rc != 0

        - name: "(DockerCompose) Generating docker-compose.yml file if all services are valid"
          ansible.builtin.command:
            cmd: >
              docker compose -p {{ komponist.configuration.project_name | default('komponist') }} {{ compose_files }} config
                --no-interpolate
                --no-path-resolution
                -o docker-compose.yml
          args:
            chdir: "{{ komponist.deploy_dir }}"
          vars:
            compose_files: >-
              {{ komponist.configuration.keys() | map('regex_replace', '^(.*)$', ' -f docker-compose.\1.yml') | join | trim }}
          changed_when: docker_compose_validity.rc != 0

        - name: "(KOMPONIST) Update the header for generated docker-compose.yml file"
          ansible.builtin.blockinfile:
            block: "{{ lookup('ansible.builtin.template', 'templates/license_header.txt.j2') }}"
            path: "{{ komponist.deploy_dir }}/docker-compose.yml"
            insertbefore: "BOF"
            marker: ""

        - name: "(KOMPONIST) Generating the .env file for the Project"
          ansible.builtin.template:
            src: config/komponist.env.j2
            dest: "{{ komponist.deploy_dir }}/.env"
            mode: "0755"
